<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>

    <properties resource="database.properties"/>

    <context id="MybatisGenerator" targetRuntime="MyBatis3">


        <property name="mergeable" value="false"></property>

        <property name="autoDelimitKeywords" value="false"/>
        <!-- 生成的Java文件的编码 -->
        <property name="javaFileEncoding" value="UTF-8"/>
        <!-- 格式化java代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化XML代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>

        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
        <commentGenerator type="com.zhsbag.mybatisgenerator.NoteCommentGenerator">
            <property name="suppressDate" value="true"/>

        </commentGenerator>
        <!--load from properties-->
        <jdbcConnection driverClass="${jdbc_driverClassName}"
                        connectionURL="${jdbc_url}"
                        userId="${jdbc_username}"
                        password="${jdbc_password}">
        </jdbcConnection>
        <!-- java类型处理器
            用于处理DB中的类型到Java中的类型，默认使用JavaTypeResolverDefaultImpl；
            注意一点，默认会先尝试使用Integer，Long，Short等来对应DECIMAL和 NUMERIC数据类型；
        -->
        <javaTypeResolver type="org.mybatis.generator.internal.types.JavaTypeResolverDefaultImpl">
            <!--
                true：使用BigDecimal对应DECIMAL和 NUMERIC数据类型
                false：默认,
                    scale>0;length>18：使用BigDecimal;
                    scale=0;length[10,18]：使用Long；
                    scale=0;length[5,9]：使用Integer；
                    scale=0;length<5：使用Short；
             -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>


        <!-- java模型创建器，是必须要的元素
            负责：1，key类（见context的defaultModelType）；2，java类；3，查询类
            targetPackage：生成的类要放的包，真实的包受enableSubPackages属性控制；
            targetProject：目标项目，指定一个存在的目录下，生成的内容会放到指定目录中，如果目录不存在，MBG不会自动建目录
         -->
        <javaModelGenerator targetPackage="${service_target_package}.entity" targetProject="${service_target_project}">
            <!--  for MyBatis3/MyBatis3Simple
                自动为每一个生成的类创建一个构造方法，构造方法包含了所有的field；而不是使用setter；
             -->
            <property name="constructorBased" value="false"/>

            <property name="immutable" value="false"/>

        </javaModelGenerator>


        <sqlMapGenerator targetPackage="mappers" targetProject="${server_resource}">
            <!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false -->
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>


        <!-- 对于mybatis来说，即生成Mapper接口，注意，如果没有配置该元素，那么默认不会生成Mapper接口
            targetPackage/targetProject:同javaModelGenerator
            type：选择怎么生成mapper接口（在MyBatis3/MyBatis3Simple下）：
                1，ANNOTATEDMAPPER：会生成使用Mapper接口+Annotation的方式创建（SQL生成在annotation中），不会生成对应的XML；
                2，MIXEDMAPPER：使用混合配置，会生成Mapper接口，并适当添加合适的Annotation，但是XML会生成在XML中；
                3，XMLMAPPER：会生成Mapper接口，接口完全依赖XML；
            注意，如果context是MyBatis3Simple：只支持ANNOTATEDMAPPER和XMLMAPPER
        -->
        <javaClientGenerator targetPackage="${server_target_package}" type="XMLMAPPER" targetProject="${server_target_project}">
            <!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false -->
            <property name="enableSubPackages" value="true"/>

            <!-- 可以为所有生成的接口添加一个父接口，但是MBG只负责生成，不负责检查
            <property name="rootInterface" value=""/>
             -->
        </javaClientGenerator>

        <!--<table schema="" tableName="t_register_user" domainObjectName="RegisterUser" enableCountByExample="false"-->
               <!--enableDeleteByExample="false"-->
               <!--enableDeleteByPrimaryKey="false" enableSelectByExample="false" enableUpdateByExample="false"/>-->
        <!--<table schema="" tableName="t_register_authentication" domainObjectName="RegisterAuthentication" enableCountByExample="false"-->
               <!--enableDeleteByExample="false"-->
               <!--enableDeleteByPrimaryKey="false" enableSelectByExample="false" enableUpdateByExample="false"/>-->
        <!--<table schema="" tableName="t_register_user_device" domainObjectName="RegisterUserDevice" enableCountByExample="false"-->
               <!--enableDeleteByExample="false"-->
               <!--enableDeleteByPrimaryKey="false" enableSelectByExample="false" enableUpdateByExample="false"/>-->
        <!--<table schema="" tableName="t_log_register_login" domainObjectName="LogRegisterLogin" enableCountByExample="false"-->
               <!--enableDeleteByExample="false"-->
               <!--enableDeleteByPrimaryKey="false" enableSelectByExample="false" enableUpdateByExample="false"/>-->
        <!--<table schema="" tableName="t_bag_info" domainObjectName="BagInfo" enableCountByExample="false"-->
               <!--enableDeleteByExample="false"-->
               <!--enableDeleteByPrimaryKey="false" enableSelectByExample="false" enableUpdateByExample="false"/>-->
        <!--<table schema="" tableName="t_bag_location" domainObjectName="BagLocation" enableCountByExample="false"-->
               <!--enableDeleteByExample="false"-->
               <!--enableDeleteByPrimaryKey="false" enableSelectByExample="false" enableUpdateByExample="false"/>-->
        <!--<table schema="" tableName="t_register_bag_info" domainObjectName="RegisterBagInfo" enableCountByExample="false"-->
               <!--enableDeleteByExample="false"-->
               <!--enableDeleteByPrimaryKey="false" enableSelectByExample="false" enableUpdateByExample="false"/>-->
        <table schema="" tableName="t_report_bag" domainObjectName="ReportBag" enableCountByExample="false"
               enableDeleteByExample="false"
               enableDeleteByPrimaryKey="false" enableSelectByExample="false" enableUpdateByExample="false"/>
        <!--<table schema="" tableName="t_sys_user" domainObjectName="SysUser" enableCountByExample="false"-->
               <!--enableDeleteByExample="false"-->
               <!--enableDeleteByPrimaryKey="false" enableSelectByExample="false" enableUpdateByExample="false"/>-->
        <!--<table schema="" tableName="t_log_sys_user_login" domainObjectName="LogSysUserLogin" enableCountByExample="false"-->
               <!--enableDeleteByExample="false"-->
               <!--enableDeleteByPrimaryKey="false" enableSelectByExample="false" enableUpdateByExample="false"/>-->




    </context>
</generatorConfiguration>